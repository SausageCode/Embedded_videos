ARM GAS  /tmp/ccLRPCzb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccLRPCzb.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart3;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_RTC_Init(void);
  55:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** // Some functions for printing ower SWO (debug only)
  63:Core/Src/main.c **** void SWO_PrintChar(char const c, uint8_t const portNo)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****     volatile int timeout;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****     /* Check if Trace Control Register (ITM->TCR at 0xE0000E80) is set */
  68:Core/Src/main.c ****     /* check Trace Control Register if ITM trace is enabled*/
  69:Core/Src/main.c ****     if ((ITM->TCR & ITM_TCR_ITMENA_Msk) == 0)
  70:Core/Src/main.c ****     {
  71:Core/Src/main.c ****         return; /* not enabled? */
  72:Core/Src/main.c ****     }
  73:Core/Src/main.c ****     /* Check if the requested channel stimulus port (ITM->TER at 0xE0000E00) is enabled */
  74:Core/Src/main.c ****     /* check Trace Enable Register if requested port is enabled */
  75:Core/Src/main.c ****     if ((ITM->TER & (1ul << portNo)) == 0)
  76:Core/Src/main.c ****     {
  77:Core/Src/main.c ****         return; /* requested port not enabled? */
  78:Core/Src/main.c ****     }
  79:Core/Src/main.c ****     timeout = 5000; /* arbitrary timeout value */
  80:Core/Src/main.c ****     while (ITM->PORT[0].u32 == 0)
  81:Core/Src/main.c ****     {
  82:Core/Src/main.c ****         /* Wait until STIMx is ready, then send data */
  83:Core/Src/main.c ****         if (--timeout == 0)
  84:Core/Src/main.c ****         {
  85:Core/Src/main.c ****             return; /* not able to send */
  86:Core/Src/main.c ****         }
  87:Core/Src/main.c ****     }
  88:Core/Src/main.c ****     ITM->PORT[0].u8 = (uint8_t)c;
ARM GAS  /tmp/ccLRPCzb.s 			page 3


  89:Core/Src/main.c **** }
  90:Core/Src/main.c **** void SWO_PrintString(char const* s, uint8_t const portNumber)
  91:Core/Src/main.c **** {
  92:Core/Src/main.c ****     while (*s != '\0')
  93:Core/Src/main.c ****     {
  94:Core/Src/main.c ****         SWO_PrintChar(*s++, portNumber);
  95:Core/Src/main.c ****     }
  96:Core/Src/main.c **** }
  97:Core/Src/main.c **** void printString(char const* str)
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****     SWO_PrintString(str, 0);
 100:Core/Src/main.c **** }
 101:Core/Src/main.c **** // RTC will trigger every second, toggel LED and print message over SWO
 102:Core/Src/main.c **** void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef* hrtc)
 103:Core/Src/main.c **** {
 104:Core/Src/main.c ****     char msg[20];
 105:Core/Src/main.c ****     static uint32_t counter = 0;
 106:Core/Src/main.c ****     size_t const len = sprintf(msg, "Counter = %lu\n\r", counter++);
 107:Core/Src/main.c ****     printString(msg);
 108:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t*)msg, len, 10);
 109:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_15);
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief  The application entry point.
 116:Core/Src/main.c ****   * @retval int
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** int main(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Initialize all configured peripherals */
 141:Core/Src/main.c ****   MX_GPIO_Init();
 142:Core/Src/main.c ****   MX_RTC_Init();
 143:Core/Src/main.c ****   MX_USART3_UART_Init();
 144:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccLRPCzb.s 			page 4


 146:Core/Src/main.c ****     // Empty variables to show compiler option -Wno-unused-variable
 147:Core/Src/main.c ****     int var1 = 549;
 148:Core/Src/main.c ****     float var2 = 24.241f;
 149:Core/Src/main.c ****     char var3 = 'c';
 150:Core/Src/main.c ****     double var4 = 521.521;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END 2 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Infinite loop */
 155:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 156:Core/Src/main.c ****     while (1)
 157:Core/Src/main.c ****     {
 158:Core/Src/main.c ****     /* USER CODE END WHILE */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 161:Core/Src/main.c ****     }
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief System Clock Configuration
 167:Core/Src/main.c ****   * @retval None
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c **** void SystemClock_Config(void)
 170:Core/Src/main.c **** {
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 178:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 179:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 180:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 184:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/ccLRPCzb.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 209:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 210:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     Error_Handler();
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c **** }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****   * @brief RTC Initialization Function
 218:Core/Src/main.c ****   * @param None
 219:Core/Src/main.c ****   * @retval None
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c **** static void MX_RTC_Init(void)
 222:Core/Src/main.c **** {
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 229:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 234:Core/Src/main.c ****   /** Initialize RTC Only
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c ****   hrtc.Instance = RTC;
 237:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 238:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 239:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 240:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 241:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 242:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 243:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c ****   sTime.Hours = 0;
 255:Core/Src/main.c ****   sTime.Minutes = 0;
 256:Core/Src/main.c ****   sTime.Seconds = 0;
 257:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 258:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 259:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
ARM GAS  /tmp/ccLRPCzb.s 			page 6


 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 264:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 265:Core/Src/main.c ****   sDate.Date = 1;
 266:Core/Src/main.c ****   sDate.Year = 0;
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BIN) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /** Enable the WakeUp
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c ****   if (HAL_RTCEx_SetWakeUpTimer_IT(&hrtc, 0, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****     Error_Handler();
 277:Core/Src/main.c ****   }
 278:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief USART3 Initialization Function
 286:Core/Src/main.c ****   * @param None
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 290:Core/Src/main.c **** {
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 299:Core/Src/main.c ****   huart3.Instance = USART3;
 300:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 301:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 302:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 303:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 304:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 305:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 306:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccLRPCzb.s 			page 7


 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief GPIO Initialization Function
 319:Core/Src/main.c ****   * @param None
 320:Core/Src/main.c ****   * @retval None
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c **** static void MX_GPIO_Init(void)
 323:Core/Src/main.c **** {
  28              		.loc 1 323 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 324:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 324 3 view .LVU1
  42              		.loc 1 324 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 327:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 327 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 327 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 327 3 view .LVU5
  54 0012 1E4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 327 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 327 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 327 3 view .LVU8
 328:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  66              		.loc 1 328 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 328 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 328 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/ccLRPCzb.s 			page 8


  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 328 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00202 		and	r2, r2, #2
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 328 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 328 3 view .LVU14
 329:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  82              		.loc 1 329 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 329 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 329 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00802 		orr	r2, r2, #8
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 329 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00802 		and	r2, r2, #8
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 329 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 329 3 view .LVU20
 330:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  98              		.loc 1 330 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 330 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 330 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00102 		orr	r2, r2, #1
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 330 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00103 		and	r3, r3, #1
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 330 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 330 3 view .LVU26
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 333:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
 114              		.loc 1 333 3 view .LVU27
 115 0062 0B4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 4FF40041 		mov	r1, #32768
 118 006a 2846     		mov	r0, r5
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /*Configure GPIO pin : PD15 */
 336:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 121              		.loc 1 336 3 view .LVU28
ARM GAS  /tmp/ccLRPCzb.s 			page 9


 122              		.loc 1 336 23 is_stmt 0 view .LVU29
 123 0070 4FF40043 		mov	r3, #32768
 124 0074 0593     		str	r3, [sp, #20]
 337:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 337 3 is_stmt 1 view .LVU30
 126              		.loc 1 337 24 is_stmt 0 view .LVU31
 127 0076 0123     		movs	r3, #1
 128 0078 0693     		str	r3, [sp, #24]
 338:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 338 3 is_stmt 1 view .LVU32
 130              		.loc 1 338 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 339:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 339 3 is_stmt 1 view .LVU34
 133              		.loc 1 339 25 is_stmt 0 view .LVU35
 134 007c 0894     		str	r4, [sp, #32]
 340:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 135              		.loc 1 340 3 is_stmt 1 view .LVU36
 136 007e 05A9     		add	r1, sp, #20
 137 0080 2846     		mov	r0, r5
 138 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL1:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** }
 140              		.loc 1 342 1 is_stmt 0 view .LVU37
 141 0086 0BB0     		add	sp, sp, #44
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 12
 144              		@ sp needed
 145 0088 30BD     		pop	{r4, r5, pc}
 146              	.L4:
 147 008a 00BF     		.align	2
 148              	.L3:
 149 008c 00380240 		.word	1073887232
 150 0090 000C0240 		.word	1073875968
 151              		.cfi_endproc
 152              	.LFE141:
 154              		.section	.text.SWO_PrintChar,"ax",%progbits
 155              		.align	1
 156              		.global	SWO_PrintChar
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	SWO_PrintChar:
 163              	.LVL2:
 164              	.LFB133:
  64:Core/Src/main.c ****     volatile int timeout;
 165              		.loc 1 64 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
  65:Core/Src/main.c **** 
 170              		.loc 1 65 5 view .LVU39
  69:Core/Src/main.c ****     {
 171              		.loc 1 69 5 view .LVU40
ARM GAS  /tmp/ccLRPCzb.s 			page 10


  69:Core/Src/main.c ****     {
 172              		.loc 1 69 13 is_stmt 0 view .LVU41
 173 0000 4FF06043 		mov	r3, #-536870912
 174 0004 D3F8803E 		ldr	r3, [r3, #3712]
  69:Core/Src/main.c ****     {
 175              		.loc 1 69 8 view .LVU42
 176 0008 13F0010F 		tst	r3, #1
 177 000c 1BD0     		beq	.L10
  75:Core/Src/main.c ****     {
 178              		.loc 1 75 5 is_stmt 1 view .LVU43
  75:Core/Src/main.c ****     {
 179              		.loc 1 75 13 is_stmt 0 view .LVU44
 180 000e 4FF06043 		mov	r3, #-536870912
 181 0012 D3F8003E 		ldr	r3, [r3, #3584]
  75:Core/Src/main.c ****     {
 182              		.loc 1 75 38 view .LVU45
 183 0016 23FA01F1 		lsr	r1, r3, r1
 184              	.LVL3:
  75:Core/Src/main.c ****     {
 185              		.loc 1 75 8 view .LVU46
 186 001a 11F0010F 		tst	r1, #1
 187 001e 12D0     		beq	.L10
  64:Core/Src/main.c ****     volatile int timeout;
 188              		.loc 1 64 1 view .LVU47
 189 0020 82B0     		sub	sp, sp, #8
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
  79:Core/Src/main.c ****     while (ITM->PORT[0].u32 == 0)
 192              		.loc 1 79 5 is_stmt 1 view .LVU48
  79:Core/Src/main.c ****     while (ITM->PORT[0].u32 == 0)
 193              		.loc 1 79 13 is_stmt 0 view .LVU49
 194 0022 41F28833 		movw	r3, #5000
 195 0026 0193     		str	r3, [sp, #4]
  80:Core/Src/main.c ****     {
 196              		.loc 1 80 5 is_stmt 1 view .LVU50
 197              	.L7:
  80:Core/Src/main.c ****     {
 198              		.loc 1 80 11 view .LVU51
  80:Core/Src/main.c ****     {
 199              		.loc 1 80 24 is_stmt 0 view .LVU52
 200 0028 4FF06043 		mov	r3, #-536870912
 201 002c 1B68     		ldr	r3, [r3]
  80:Core/Src/main.c ****     {
 202              		.loc 1 80 11 view .LVU53
 203 002e 2BB9     		cbnz	r3, .L13
  83:Core/Src/main.c ****         {
 204              		.loc 1 83 9 is_stmt 1 view .LVU54
  83:Core/Src/main.c ****         {
 205              		.loc 1 83 13 is_stmt 0 view .LVU55
 206 0030 019B     		ldr	r3, [sp, #4]
 207 0032 013B     		subs	r3, r3, #1
  83:Core/Src/main.c ****         {
 208              		.loc 1 83 12 view .LVU56
 209 0034 0193     		str	r3, [sp, #4]
 210 0036 002B     		cmp	r3, #0
 211 0038 F6D1     		bne	.L7
 212 003a 02E0     		b	.L5
ARM GAS  /tmp/ccLRPCzb.s 			page 11


 213              	.L13:
  88:Core/Src/main.c **** }
 214              		.loc 1 88 5 is_stmt 1 view .LVU57
  88:Core/Src/main.c **** }
 215              		.loc 1 88 21 is_stmt 0 view .LVU58
 216 003c 4FF06043 		mov	r3, #-536870912
 217 0040 1870     		strb	r0, [r3]
 218              	.L5:
  89:Core/Src/main.c **** void SWO_PrintString(char const* s, uint8_t const portNumber)
 219              		.loc 1 89 1 view .LVU59
 220 0042 02B0     		add	sp, sp, #8
 221              	.LCFI4:
 222              		.cfi_def_cfa_offset 0
 223              		@ sp needed
 224 0044 7047     		bx	lr
 225              	.L10:
 226 0046 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE133:
 230              		.section	.text.SWO_PrintString,"ax",%progbits
 231              		.align	1
 232              		.global	SWO_PrintString
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	SWO_PrintString:
 239              	.LVL4:
 240              	.LFB134:
  91:Core/Src/main.c ****     while (*s != '\0')
 241              		.loc 1 91 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/main.c ****     while (*s != '\0')
 245              		.loc 1 91 1 is_stmt 0 view .LVU61
 246 0000 38B5     		push	{r3, r4, r5, lr}
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 3, -16
 250              		.cfi_offset 4, -12
 251              		.cfi_offset 5, -8
 252              		.cfi_offset 14, -4
 253 0002 0446     		mov	r4, r0
 254 0004 0D46     		mov	r5, r1
  92:Core/Src/main.c ****     {
 255              		.loc 1 92 5 is_stmt 1 view .LVU62
  92:Core/Src/main.c ****     {
 256              		.loc 1 92 11 is_stmt 0 view .LVU63
 257 0006 03E0     		b	.L15
 258              	.LVL5:
 259              	.L16:
  94:Core/Src/main.c ****     }
 260              		.loc 1 94 9 is_stmt 1 view .LVU64
  94:Core/Src/main.c ****     }
 261              		.loc 1 94 25 is_stmt 0 view .LVU65
 262 0008 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccLRPCzb.s 			page 12


 263              	.LVL6:
  94:Core/Src/main.c ****     }
 264              		.loc 1 94 9 view .LVU66
 265 000a 2946     		mov	r1, r5
 266 000c FFF7FEFF 		bl	SWO_PrintChar
 267              	.LVL7:
 268              	.L15:
  92:Core/Src/main.c ****     {
 269              		.loc 1 92 11 is_stmt 1 view .LVU67
  92:Core/Src/main.c ****     {
 270              		.loc 1 92 12 is_stmt 0 view .LVU68
 271 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
  92:Core/Src/main.c ****     {
 272              		.loc 1 92 11 view .LVU69
 273 0012 0028     		cmp	r0, #0
 274 0014 F8D1     		bne	.L16
  96:Core/Src/main.c **** void printString(char const* str)
 275              		.loc 1 96 1 view .LVU70
 276 0016 38BD     		pop	{r3, r4, r5, pc}
  96:Core/Src/main.c **** void printString(char const* str)
 277              		.loc 1 96 1 view .LVU71
 278              		.cfi_endproc
 279              	.LFE134:
 281              		.section	.text.printString,"ax",%progbits
 282              		.align	1
 283              		.global	printString
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	printString:
 290              	.LVL8:
 291              	.LFB135:
  98:Core/Src/main.c ****     SWO_PrintString(str, 0);
 292              		.loc 1 98 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
  98:Core/Src/main.c ****     SWO_PrintString(str, 0);
 296              		.loc 1 98 1 is_stmt 0 view .LVU73
 297 0000 08B5     		push	{r3, lr}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
  99:Core/Src/main.c **** }
 302              		.loc 1 99 5 is_stmt 1 view .LVU74
 303 0002 0021     		movs	r1, #0
 304 0004 FFF7FEFF 		bl	SWO_PrintString
 305              	.LVL9:
 100:Core/Src/main.c **** // RTC will trigger every second, toggel LED and print message over SWO
 306              		.loc 1 100 1 is_stmt 0 view .LVU75
 307 0008 08BD     		pop	{r3, pc}
 308              		.cfi_endproc
 309              	.LFE135:
 311              		.section	.rodata.HAL_RTCEx_WakeUpTimerEventCallback.str1.4,"aMS",%progbits,1
 312              		.align	2
ARM GAS  /tmp/ccLRPCzb.s 			page 13


 313              	.LC0:
 314 0000 436F756E 		.ascii	"Counter = %lu\012\015\000"
 314      74657220 
 314      3D20256C 
 314      750A0D00 
 315              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 316              		.align	1
 317              		.global	HAL_RTCEx_WakeUpTimerEventCallback
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	HAL_RTCEx_WakeUpTimerEventCallback:
 324              	.LVL10:
 325              	.LFB136:
 103:Core/Src/main.c ****     char msg[20];
 326              		.loc 1 103 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 24
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 103:Core/Src/main.c ****     char msg[20];
 330              		.loc 1 103 1 is_stmt 0 view .LVU77
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI7:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 86B0     		sub	sp, sp, #24
 337              	.LCFI8:
 338              		.cfi_def_cfa_offset 32
 104:Core/Src/main.c ****     static uint32_t counter = 0;
 339              		.loc 1 104 5 is_stmt 1 view .LVU78
 105:Core/Src/main.c ****     size_t const len = sprintf(msg, "Counter = %lu\n\r", counter++);
 340              		.loc 1 105 5 view .LVU79
 106:Core/Src/main.c ****     printString(msg);
 341              		.loc 1 106 5 view .LVU80
 106:Core/Src/main.c ****     printString(msg);
 342              		.loc 1 106 24 is_stmt 0 view .LVU81
 343 0004 0C4B     		ldr	r3, .L22
 344 0006 1A68     		ldr	r2, [r3]
 345 0008 511C     		adds	r1, r2, #1
 346 000a 1960     		str	r1, [r3]
 347 000c 0B49     		ldr	r1, .L22+4
 348 000e 01A8     		add	r0, sp, #4
 349              	.LVL11:
 106:Core/Src/main.c ****     printString(msg);
 350              		.loc 1 106 24 view .LVU82
 351 0010 FFF7FEFF 		bl	sprintf
 352              	.LVL12:
 353 0014 0446     		mov	r4, r0
 354              	.LVL13:
 107:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t*)msg, len, 10);
 355              		.loc 1 107 5 is_stmt 1 view .LVU83
 356 0016 01A8     		add	r0, sp, #4
 357              	.LVL14:
 107:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, (uint8_t*)msg, len, 10);
 358              		.loc 1 107 5 is_stmt 0 view .LVU84
ARM GAS  /tmp/ccLRPCzb.s 			page 14


 359 0018 FFF7FEFF 		bl	printString
 360              	.LVL15:
 108:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_15);
 361              		.loc 1 108 5 is_stmt 1 view .LVU85
 362 001c 0A23     		movs	r3, #10
 363 001e A2B2     		uxth	r2, r4
 364 0020 01A9     		add	r1, sp, #4
 365 0022 0748     		ldr	r0, .L22+8
 366 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 367              	.LVL16:
 109:Core/Src/main.c **** }
 368              		.loc 1 109 5 view .LVU86
 369 0028 4FF40041 		mov	r1, #32768
 370 002c 0548     		ldr	r0, .L22+12
 371 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 372              	.LVL17:
 110:Core/Src/main.c **** 
 373              		.loc 1 110 1 is_stmt 0 view .LVU87
 374 0032 06B0     		add	sp, sp, #24
 375              	.LCFI9:
 376              		.cfi_def_cfa_offset 8
 377              		@ sp needed
 378 0034 10BD     		pop	{r4, pc}
 379              	.LVL18:
 380              	.L23:
 110:Core/Src/main.c **** 
 381              		.loc 1 110 1 view .LVU88
 382 0036 00BF     		.align	2
 383              	.L22:
 384 0038 00000000 		.word	.LANCHOR0
 385 003c 00000000 		.word	.LC0
 386 0040 00000000 		.word	.LANCHOR1
 387 0044 000C0240 		.word	1073875968
 388              		.cfi_endproc
 389              	.LFE136:
 391              		.section	.text.Error_Handler,"ax",%progbits
 392              		.align	1
 393              		.global	Error_Handler
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv4-sp-d16
 399              	Error_Handler:
 400              	.LFB142:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /* USER CODE END 4 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 350:Core/Src/main.c ****   * @retval None
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c **** void Error_Handler(void)
 353:Core/Src/main.c **** {
 401              		.loc 1 353 1 is_stmt 1 view -0
 402              		.cfi_startproc
ARM GAS  /tmp/ccLRPCzb.s 			page 15


 403              		@ Volatile: function does not return.
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 354:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 355:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 356:Core/Src/main.c ****     __disable_irq();
 407              		.loc 1 356 5 view .LVU90
 408              	.LBB8:
 409              	.LBI8:
 410              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccLRPCzb.s 			page 16


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccLRPCzb.s 			page 17


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 411              		.loc 2 140 27 view .LVU91
 412              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 413              		.loc 2 142 3 view .LVU92
 414              		.syntax unified
 415              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 416 0000 72B6     		cpsid i
 417              	@ 0 "" 2
 418              		.thumb
 419              		.syntax unified
 420              	.L25:
 421              	.LBE9:
 422              	.LBE8:
 357:Core/Src/main.c ****     while (1)
 423              		.loc 1 357 5 discriminator 1 view .LVU93
 358:Core/Src/main.c ****     {
 359:Core/Src/main.c ****     }
 424              		.loc 1 359 5 discriminator 1 view .LVU94
 357:Core/Src/main.c ****     while (1)
ARM GAS  /tmp/ccLRPCzb.s 			page 18


 425              		.loc 1 357 11 discriminator 1 view .LVU95
 426 0002 FEE7     		b	.L25
 427              		.cfi_endproc
 428              	.LFE142:
 430              		.section	.text.MX_RTC_Init,"ax",%progbits
 431              		.align	1
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv4-sp-d16
 437              	MX_RTC_Init:
 438              	.LFB139:
 222:Core/Src/main.c **** 
 439              		.loc 1 222 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 24
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443 0000 00B5     		push	{lr}
 444              	.LCFI10:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 14, -4
 447 0002 87B0     		sub	sp, sp, #28
 448              	.LCFI11:
 449              		.cfi_def_cfa_offset 32
 228:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 450              		.loc 1 228 3 view .LVU97
 228:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 451              		.loc 1 228 19 is_stmt 0 view .LVU98
 452 0004 0023     		movs	r3, #0
 453 0006 0193     		str	r3, [sp, #4]
 454 0008 0293     		str	r3, [sp, #8]
 455 000a 0393     		str	r3, [sp, #12]
 456 000c 0493     		str	r3, [sp, #16]
 457 000e 0593     		str	r3, [sp, #20]
 229:Core/Src/main.c **** 
 458              		.loc 1 229 3 is_stmt 1 view .LVU99
 229:Core/Src/main.c **** 
 459              		.loc 1 229 19 is_stmt 0 view .LVU100
 460 0010 0093     		str	r3, [sp]
 236:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 461              		.loc 1 236 3 is_stmt 1 view .LVU101
 236:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 462              		.loc 1 236 17 is_stmt 0 view .LVU102
 463 0012 1E48     		ldr	r0, .L36
 464 0014 1E4A     		ldr	r2, .L36+4
 465 0016 0260     		str	r2, [r0]
 237:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 466              		.loc 1 237 3 is_stmt 1 view .LVU103
 237:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 467              		.loc 1 237 24 is_stmt 0 view .LVU104
 468 0018 4360     		str	r3, [r0, #4]
 238:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 469              		.loc 1 238 3 is_stmt 1 view .LVU105
 238:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 470              		.loc 1 238 26 is_stmt 0 view .LVU106
 471 001a 7F22     		movs	r2, #127
 472 001c 8260     		str	r2, [r0, #8]
ARM GAS  /tmp/ccLRPCzb.s 			page 19


 239:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 473              		.loc 1 239 3 is_stmt 1 view .LVU107
 239:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 474              		.loc 1 239 25 is_stmt 0 view .LVU108
 475 001e FF22     		movs	r2, #255
 476 0020 C260     		str	r2, [r0, #12]
 240:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 477              		.loc 1 240 3 is_stmt 1 view .LVU109
 240:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 478              		.loc 1 240 20 is_stmt 0 view .LVU110
 479 0022 0361     		str	r3, [r0, #16]
 241:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 480              		.loc 1 241 3 is_stmt 1 view .LVU111
 241:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 481              		.loc 1 241 28 is_stmt 0 view .LVU112
 482 0024 4361     		str	r3, [r0, #20]
 242:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 483              		.loc 1 242 3 is_stmt 1 view .LVU113
 242:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 484              		.loc 1 242 24 is_stmt 0 view .LVU114
 485 0026 8361     		str	r3, [r0, #24]
 243:Core/Src/main.c ****   {
 486              		.loc 1 243 3 is_stmt 1 view .LVU115
 243:Core/Src/main.c ****   {
 487              		.loc 1 243 7 is_stmt 0 view .LVU116
 488 0028 FFF7FEFF 		bl	HAL_RTC_Init
 489              	.LVL19:
 243:Core/Src/main.c ****   {
 490              		.loc 1 243 6 view .LVU117
 491 002c 28BB     		cbnz	r0, .L32
 254:Core/Src/main.c ****   sTime.Minutes = 0;
 492              		.loc 1 254 3 is_stmt 1 view .LVU118
 254:Core/Src/main.c ****   sTime.Minutes = 0;
 493              		.loc 1 254 15 is_stmt 0 view .LVU119
 494 002e 0022     		movs	r2, #0
 495 0030 8DF80420 		strb	r2, [sp, #4]
 255:Core/Src/main.c ****   sTime.Seconds = 0;
 496              		.loc 1 255 3 is_stmt 1 view .LVU120
 255:Core/Src/main.c ****   sTime.Seconds = 0;
 497              		.loc 1 255 17 is_stmt 0 view .LVU121
 498 0034 8DF80520 		strb	r2, [sp, #5]
 256:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 499              		.loc 1 256 3 is_stmt 1 view .LVU122
 256:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 500              		.loc 1 256 17 is_stmt 0 view .LVU123
 501 0038 8DF80620 		strb	r2, [sp, #6]
 257:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 502              		.loc 1 257 3 is_stmt 1 view .LVU124
 257:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 503              		.loc 1 257 24 is_stmt 0 view .LVU125
 504 003c 0492     		str	r2, [sp, #16]
 258:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 505              		.loc 1 258 3 is_stmt 1 view .LVU126
 258:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 506              		.loc 1 258 24 is_stmt 0 view .LVU127
 507 003e 0592     		str	r2, [sp, #20]
 259:Core/Src/main.c ****   {
ARM GAS  /tmp/ccLRPCzb.s 			page 20


 508              		.loc 1 259 3 is_stmt 1 view .LVU128
 259:Core/Src/main.c ****   {
 509              		.loc 1 259 7 is_stmt 0 view .LVU129
 510 0040 01A9     		add	r1, sp, #4
 511 0042 1248     		ldr	r0, .L36
 512 0044 FFF7FEFF 		bl	HAL_RTC_SetTime
 513              	.LVL20:
 259:Core/Src/main.c ****   {
 514              		.loc 1 259 6 view .LVU130
 515 0048 C8B9     		cbnz	r0, .L33
 263:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 516              		.loc 1 263 3 is_stmt 1 view .LVU131
 263:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 517              		.loc 1 263 17 is_stmt 0 view .LVU132
 518 004a 0123     		movs	r3, #1
 519 004c 8DF80030 		strb	r3, [sp]
 264:Core/Src/main.c ****   sDate.Date = 1;
 520              		.loc 1 264 3 is_stmt 1 view .LVU133
 264:Core/Src/main.c ****   sDate.Date = 1;
 521              		.loc 1 264 15 is_stmt 0 view .LVU134
 522 0050 8DF80130 		strb	r3, [sp, #1]
 265:Core/Src/main.c ****   sDate.Year = 0;
 523              		.loc 1 265 3 is_stmt 1 view .LVU135
 265:Core/Src/main.c ****   sDate.Year = 0;
 524              		.loc 1 265 14 is_stmt 0 view .LVU136
 525 0054 8DF80230 		strb	r3, [sp, #2]
 266:Core/Src/main.c **** 
 526              		.loc 1 266 3 is_stmt 1 view .LVU137
 266:Core/Src/main.c **** 
 527              		.loc 1 266 14 is_stmt 0 view .LVU138
 528 0058 0022     		movs	r2, #0
 529 005a 8DF80320 		strb	r2, [sp, #3]
 268:Core/Src/main.c ****   {
 530              		.loc 1 268 3 is_stmt 1 view .LVU139
 268:Core/Src/main.c ****   {
 531              		.loc 1 268 7 is_stmt 0 view .LVU140
 532 005e 6946     		mov	r1, sp
 533 0060 0A48     		ldr	r0, .L36
 534 0062 FFF7FEFF 		bl	HAL_RTC_SetDate
 535              	.LVL21:
 268:Core/Src/main.c ****   {
 536              		.loc 1 268 6 view .LVU141
 537 0066 60B9     		cbnz	r0, .L34
 274:Core/Src/main.c ****   {
 538              		.loc 1 274 3 is_stmt 1 view .LVU142
 274:Core/Src/main.c ****   {
 539              		.loc 1 274 7 is_stmt 0 view .LVU143
 540 0068 0422     		movs	r2, #4
 541 006a 0021     		movs	r1, #0
 542 006c 0748     		ldr	r0, .L36
 543 006e FFF7FEFF 		bl	HAL_RTCEx_SetWakeUpTimer_IT
 544              	.LVL22:
 274:Core/Src/main.c ****   {
 545              		.loc 1 274 6 view .LVU144
 546 0072 40B9     		cbnz	r0, .L35
 282:Core/Src/main.c **** 
 547              		.loc 1 282 1 view .LVU145
ARM GAS  /tmp/ccLRPCzb.s 			page 21


 548 0074 07B0     		add	sp, sp, #28
 549              	.LCFI12:
 550              		.cfi_remember_state
 551              		.cfi_def_cfa_offset 4
 552              		@ sp needed
 553 0076 5DF804FB 		ldr	pc, [sp], #4
 554              	.L32:
 555              	.LCFI13:
 556              		.cfi_restore_state
 245:Core/Src/main.c ****   }
 557              		.loc 1 245 5 is_stmt 1 view .LVU146
 558 007a FFF7FEFF 		bl	Error_Handler
 559              	.LVL23:
 560              	.L33:
 261:Core/Src/main.c ****   }
 561              		.loc 1 261 5 view .LVU147
 562 007e FFF7FEFF 		bl	Error_Handler
 563              	.LVL24:
 564              	.L34:
 270:Core/Src/main.c ****   }
 565              		.loc 1 270 5 view .LVU148
 566 0082 FFF7FEFF 		bl	Error_Handler
 567              	.LVL25:
 568              	.L35:
 276:Core/Src/main.c ****   }
 569              		.loc 1 276 5 view .LVU149
 570 0086 FFF7FEFF 		bl	Error_Handler
 571              	.LVL26:
 572              	.L37:
 573 008a 00BF     		.align	2
 574              	.L36:
 575 008c 00000000 		.word	.LANCHOR2
 576 0090 00280040 		.word	1073752064
 577              		.cfi_endproc
 578              	.LFE139:
 580              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 581              		.align	1
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	MX_USART3_UART_Init:
 588              	.LFB140:
 290:Core/Src/main.c **** 
 589              		.loc 1 290 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 08B5     		push	{r3, lr}
 594              	.LCFI14:
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 3, -8
 597              		.cfi_offset 14, -4
 299:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 598              		.loc 1 299 3 view .LVU151
 299:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 599              		.loc 1 299 19 is_stmt 0 view .LVU152
ARM GAS  /tmp/ccLRPCzb.s 			page 22


 600 0002 0A48     		ldr	r0, .L42
 601 0004 0A4B     		ldr	r3, .L42+4
 602 0006 0360     		str	r3, [r0]
 300:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 603              		.loc 1 300 3 is_stmt 1 view .LVU153
 300:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 604              		.loc 1 300 24 is_stmt 0 view .LVU154
 605 0008 4FF4E133 		mov	r3, #115200
 606 000c 4360     		str	r3, [r0, #4]
 301:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 607              		.loc 1 301 3 is_stmt 1 view .LVU155
 301:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 608              		.loc 1 301 26 is_stmt 0 view .LVU156
 609 000e 0023     		movs	r3, #0
 610 0010 8360     		str	r3, [r0, #8]
 302:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 611              		.loc 1 302 3 is_stmt 1 view .LVU157
 302:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 612              		.loc 1 302 24 is_stmt 0 view .LVU158
 613 0012 C360     		str	r3, [r0, #12]
 303:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 614              		.loc 1 303 3 is_stmt 1 view .LVU159
 303:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 615              		.loc 1 303 22 is_stmt 0 view .LVU160
 616 0014 0361     		str	r3, [r0, #16]
 304:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 617              		.loc 1 304 3 is_stmt 1 view .LVU161
 304:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 618              		.loc 1 304 20 is_stmt 0 view .LVU162
 619 0016 0C22     		movs	r2, #12
 620 0018 4261     		str	r2, [r0, #20]
 305:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 621              		.loc 1 305 3 is_stmt 1 view .LVU163
 305:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 622              		.loc 1 305 25 is_stmt 0 view .LVU164
 623 001a 8361     		str	r3, [r0, #24]
 306:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 624              		.loc 1 306 3 is_stmt 1 view .LVU165
 306:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 625              		.loc 1 306 28 is_stmt 0 view .LVU166
 626 001c C361     		str	r3, [r0, #28]
 307:Core/Src/main.c ****   {
 627              		.loc 1 307 3 is_stmt 1 view .LVU167
 307:Core/Src/main.c ****   {
 628              		.loc 1 307 7 is_stmt 0 view .LVU168
 629 001e FFF7FEFF 		bl	HAL_UART_Init
 630              	.LVL27:
 307:Core/Src/main.c ****   {
 631              		.loc 1 307 6 view .LVU169
 632 0022 00B9     		cbnz	r0, .L41
 315:Core/Src/main.c **** 
 633              		.loc 1 315 1 view .LVU170
 634 0024 08BD     		pop	{r3, pc}
 635              	.L41:
 309:Core/Src/main.c ****   }
 636              		.loc 1 309 5 is_stmt 1 view .LVU171
 637 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccLRPCzb.s 			page 23


 638              	.LVL28:
 639              	.L43:
 640 002a 00BF     		.align	2
 641              	.L42:
 642 002c 00000000 		.word	.LANCHOR1
 643 0030 00480040 		.word	1073760256
 644              		.cfi_endproc
 645              	.LFE140:
 647              		.section	.text.SystemClock_Config,"ax",%progbits
 648              		.align	1
 649              		.global	SystemClock_Config
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	SystemClock_Config:
 656              	.LFB138:
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 657              		.loc 1 170 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 96
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 00B5     		push	{lr}
 662              	.LCFI15:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 14, -4
 665 0002 99B0     		sub	sp, sp, #100
 666              	.LCFI16:
 667              		.cfi_def_cfa_offset 104
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 668              		.loc 1 171 3 view .LVU173
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 669              		.loc 1 171 22 is_stmt 0 view .LVU174
 670 0004 3022     		movs	r2, #48
 671 0006 0021     		movs	r1, #0
 672 0008 0DEB0200 		add	r0, sp, r2
 673 000c FFF7FEFF 		bl	memset
 674              	.LVL29:
 172:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 675              		.loc 1 172 3 is_stmt 1 view .LVU175
 172:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 676              		.loc 1 172 22 is_stmt 0 view .LVU176
 677 0010 0023     		movs	r3, #0
 678 0012 0793     		str	r3, [sp, #28]
 679 0014 0893     		str	r3, [sp, #32]
 680 0016 0993     		str	r3, [sp, #36]
 681 0018 0A93     		str	r3, [sp, #40]
 682 001a 0B93     		str	r3, [sp, #44]
 173:Core/Src/main.c **** 
 683              		.loc 1 173 3 is_stmt 1 view .LVU177
 173:Core/Src/main.c **** 
 684              		.loc 1 173 28 is_stmt 0 view .LVU178
 685 001c 0393     		str	r3, [sp, #12]
 686 001e 0493     		str	r3, [sp, #16]
 687 0020 0593     		str	r3, [sp, #20]
 688 0022 0693     		str	r3, [sp, #24]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccLRPCzb.s 			page 24


 689              		.loc 1 177 3 is_stmt 1 view .LVU179
 690              	.LBB10:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 691              		.loc 1 177 3 view .LVU180
 692 0024 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 693              		.loc 1 177 3 view .LVU181
 694 0026 264A     		ldr	r2, .L52
 695 0028 116C     		ldr	r1, [r2, #64]
 696 002a 41F08051 		orr	r1, r1, #268435456
 697 002e 1164     		str	r1, [r2, #64]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 698              		.loc 1 177 3 view .LVU182
 699 0030 126C     		ldr	r2, [r2, #64]
 700 0032 02F08052 		and	r2, r2, #268435456
 701 0036 0192     		str	r2, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 702              		.loc 1 177 3 view .LVU183
 703 0038 019A     		ldr	r2, [sp, #4]
 704              	.LBE10:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 705              		.loc 1 177 3 view .LVU184
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 706              		.loc 1 178 3 view .LVU185
 707              	.LBB11:
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 708              		.loc 1 178 3 view .LVU186
 709 003a 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 710              		.loc 1 178 3 view .LVU187
 711 003c 214B     		ldr	r3, .L52+4
 712 003e 1A68     		ldr	r2, [r3]
 713 0040 42F48042 		orr	r2, r2, #16384
 714 0044 1A60     		str	r2, [r3]
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 715              		.loc 1 178 3 view .LVU188
 716 0046 1B68     		ldr	r3, [r3]
 717 0048 03F48043 		and	r3, r3, #16384
 718 004c 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 719              		.loc 1 178 3 view .LVU189
 720 004e 029B     		ldr	r3, [sp, #8]
 721              	.LBE11:
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 722              		.loc 1 178 3 view .LVU190
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 723              		.loc 1 182 3 view .LVU191
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 724              		.loc 1 182 36 is_stmt 0 view .LVU192
 725 0050 0923     		movs	r3, #9
 726 0052 0C93     		str	r3, [sp, #48]
 183:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 727              		.loc 1 183 3 is_stmt 1 view .LVU193
 183:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 728              		.loc 1 183 30 is_stmt 0 view .LVU194
 729 0054 4FF48033 		mov	r3, #65536
 730 0058 0D93     		str	r3, [sp, #52]
ARM GAS  /tmp/ccLRPCzb.s 			page 25


 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 731              		.loc 1 184 3 is_stmt 1 view .LVU195
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 732              		.loc 1 184 30 is_stmt 0 view .LVU196
 733 005a 0123     		movs	r3, #1
 734 005c 1193     		str	r3, [sp, #68]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 735              		.loc 1 185 3 is_stmt 1 view .LVU197
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 736              		.loc 1 185 34 is_stmt 0 view .LVU198
 737 005e 0222     		movs	r2, #2
 738 0060 1292     		str	r2, [sp, #72]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 739              		.loc 1 186 3 is_stmt 1 view .LVU199
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 740              		.loc 1 186 35 is_stmt 0 view .LVU200
 741 0062 4FF48003 		mov	r3, #4194304
 742 0066 1393     		str	r3, [sp, #76]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 743              		.loc 1 187 3 is_stmt 1 view .LVU201
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 160;
 744              		.loc 1 187 30 is_stmt 0 view .LVU202
 745 0068 0423     		movs	r3, #4
 746 006a 1493     		str	r3, [sp, #80]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 747              		.loc 1 188 3 is_stmt 1 view .LVU203
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 748              		.loc 1 188 30 is_stmt 0 view .LVU204
 749 006c A021     		movs	r1, #160
 750 006e 1591     		str	r1, [sp, #84]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 751              		.loc 1 189 3 is_stmt 1 view .LVU205
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 752              		.loc 1 189 30 is_stmt 0 view .LVU206
 753 0070 1692     		str	r2, [sp, #88]
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 754              		.loc 1 190 3 is_stmt 1 view .LVU207
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 755              		.loc 1 190 30 is_stmt 0 view .LVU208
 756 0072 1793     		str	r3, [sp, #92]
 191:Core/Src/main.c ****   {
 757              		.loc 1 191 3 is_stmt 1 view .LVU209
 191:Core/Src/main.c ****   {
 758              		.loc 1 191 7 is_stmt 0 view .LVU210
 759 0074 0CA8     		add	r0, sp, #48
 760 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 761              	.LVL30:
 191:Core/Src/main.c ****   {
 762              		.loc 1 191 6 view .LVU211
 763 007a D0B9     		cbnz	r0, .L49
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 764              		.loc 1 197 3 is_stmt 1 view .LVU212
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 765              		.loc 1 197 31 is_stmt 0 view .LVU213
 766 007c 0F23     		movs	r3, #15
 767 007e 0793     		str	r3, [sp, #28]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccLRPCzb.s 			page 26


 768              		.loc 1 199 3 is_stmt 1 view .LVU214
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 769              		.loc 1 199 34 is_stmt 0 view .LVU215
 770 0080 0223     		movs	r3, #2
 771 0082 0893     		str	r3, [sp, #32]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 772              		.loc 1 200 3 is_stmt 1 view .LVU216
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 773              		.loc 1 200 35 is_stmt 0 view .LVU217
 774 0084 0023     		movs	r3, #0
 775 0086 0993     		str	r3, [sp, #36]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 776              		.loc 1 201 3 is_stmt 1 view .LVU218
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 777              		.loc 1 201 36 is_stmt 0 view .LVU219
 778 0088 4FF4A053 		mov	r3, #5120
 779 008c 0A93     		str	r3, [sp, #40]
 202:Core/Src/main.c **** 
 780              		.loc 1 202 3 is_stmt 1 view .LVU220
 202:Core/Src/main.c **** 
 781              		.loc 1 202 36 is_stmt 0 view .LVU221
 782 008e 0B93     		str	r3, [sp, #44]
 204:Core/Src/main.c ****   {
 783              		.loc 1 204 3 is_stmt 1 view .LVU222
 204:Core/Src/main.c ****   {
 784              		.loc 1 204 7 is_stmt 0 view .LVU223
 785 0090 0521     		movs	r1, #5
 786 0092 07A8     		add	r0, sp, #28
 787 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 788              	.LVL31:
 204:Core/Src/main.c ****   {
 789              		.loc 1 204 6 view .LVU224
 790 0098 68B9     		cbnz	r0, .L50
 208:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 791              		.loc 1 208 3 is_stmt 1 view .LVU225
 208:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 792              		.loc 1 208 44 is_stmt 0 view .LVU226
 793 009a 0223     		movs	r3, #2
 794 009c 0393     		str	r3, [sp, #12]
 209:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 795              		.loc 1 209 3 is_stmt 1 view .LVU227
 209:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 796              		.loc 1 209 41 is_stmt 0 view .LVU228
 797 009e 4FF40073 		mov	r3, #512
 798 00a2 0693     		str	r3, [sp, #24]
 210:Core/Src/main.c ****   {
 799              		.loc 1 210 3 is_stmt 1 view .LVU229
 210:Core/Src/main.c ****   {
 800              		.loc 1 210 7 is_stmt 0 view .LVU230
 801 00a4 03A8     		add	r0, sp, #12
 802 00a6 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 803              	.LVL32:
 210:Core/Src/main.c ****   {
 804              		.loc 1 210 6 view .LVU231
 805 00aa 30B9     		cbnz	r0, .L51
 214:Core/Src/main.c **** 
 806              		.loc 1 214 1 view .LVU232
ARM GAS  /tmp/ccLRPCzb.s 			page 27


 807 00ac 19B0     		add	sp, sp, #100
 808              	.LCFI17:
 809              		.cfi_remember_state
 810              		.cfi_def_cfa_offset 4
 811              		@ sp needed
 812 00ae 5DF804FB 		ldr	pc, [sp], #4
 813              	.L49:
 814              	.LCFI18:
 815              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 816              		.loc 1 193 5 is_stmt 1 view .LVU233
 817 00b2 FFF7FEFF 		bl	Error_Handler
 818              	.LVL33:
 819              	.L50:
 206:Core/Src/main.c ****   }
 820              		.loc 1 206 5 view .LVU234
 821 00b6 FFF7FEFF 		bl	Error_Handler
 822              	.LVL34:
 823              	.L51:
 212:Core/Src/main.c ****   }
 824              		.loc 1 212 5 view .LVU235
 825 00ba FFF7FEFF 		bl	Error_Handler
 826              	.LVL35:
 827              	.L53:
 828 00be 00BF     		.align	2
 829              	.L52:
 830 00c0 00380240 		.word	1073887232
 831 00c4 00700040 		.word	1073770496
 832              		.cfi_endproc
 833              	.LFE138:
 835              		.section	.text.main,"ax",%progbits
 836              		.align	1
 837              		.global	main
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu fpv4-sp-d16
 843              	main:
 844              	.LFB137:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 845              		.loc 1 119 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 08B5     		push	{r3, lr}
 850              	.LCFI19:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 3, -8
 853              		.cfi_offset 14, -4
 127:Core/Src/main.c **** 
 854              		.loc 1 127 3 view .LVU237
 855 0002 FFF7FEFF 		bl	HAL_Init
 856              	.LVL36:
 134:Core/Src/main.c **** 
 857              		.loc 1 134 3 view .LVU238
 858 0006 FFF7FEFF 		bl	SystemClock_Config
 859              	.LVL37:
ARM GAS  /tmp/ccLRPCzb.s 			page 28


 141:Core/Src/main.c ****   MX_RTC_Init();
 860              		.loc 1 141 3 view .LVU239
 861 000a FFF7FEFF 		bl	MX_GPIO_Init
 862              	.LVL38:
 142:Core/Src/main.c ****   MX_USART3_UART_Init();
 863              		.loc 1 142 3 view .LVU240
 864 000e FFF7FEFF 		bl	MX_RTC_Init
 865              	.LVL39:
 143:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 866              		.loc 1 143 3 view .LVU241
 867 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 868              	.LVL40:
 147:Core/Src/main.c ****     float var2 = 24.241f;
 869              		.loc 1 147 5 view .LVU242
 148:Core/Src/main.c ****     char var3 = 'c';
 870              		.loc 1 148 5 view .LVU243
 149:Core/Src/main.c ****     double var4 = 521.521;
 871              		.loc 1 149 5 view .LVU244
 150:Core/Src/main.c **** 
 872              		.loc 1 150 5 view .LVU245
 873              	.L55:
 156:Core/Src/main.c ****     {
 874              		.loc 1 156 5 discriminator 1 view .LVU246
 161:Core/Src/main.c ****   /* USER CODE END 3 */
 875              		.loc 1 161 5 discriminator 1 view .LVU247
 156:Core/Src/main.c ****     {
 876              		.loc 1 156 11 discriminator 1 view .LVU248
 877 0016 FEE7     		b	.L55
 878              		.cfi_endproc
 879              	.LFE137:
 881              		.global	huart3
 882              		.global	hrtc
 883              		.section	.bss.counter.0,"aw",%nobits
 884              		.align	2
 885              		.set	.LANCHOR0,. + 0
 888              	counter.0:
 889 0000 00000000 		.space	4
 890              		.section	.bss.hrtc,"aw",%nobits
 891              		.align	2
 892              		.set	.LANCHOR2,. + 0
 895              	hrtc:
 896 0000 00000000 		.space	32
 896      00000000 
 896      00000000 
 896      00000000 
 896      00000000 
 897              		.section	.bss.huart3,"aw",%nobits
 898              		.align	2
 899              		.set	.LANCHOR1,. + 0
 902              	huart3:
 903 0000 00000000 		.space	68
 903      00000000 
 903      00000000 
 903      00000000 
 903      00000000 
 904              		.text
 905              	.Letext0:
ARM GAS  /tmp/ccLRPCzb.s 			page 29


 906              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 907              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 908              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 909              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 910              		.file 7 "/usr/lib/gcc/arm-none-eabi/10.2.0/include/stddef.h"
 911              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 912              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 913              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 914              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 915              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 916              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 917              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 918              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc_ex.h"
 919              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 920              		.file 17 "/usr/arm-none-eabi/include/stdio.h"
 921              		.file 18 "<built-in>"
ARM GAS  /tmp/ccLRPCzb.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLRPCzb.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLRPCzb.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLRPCzb.s:149    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/ccLRPCzb.s:155    .text.SWO_PrintChar:0000000000000000 $t
     /tmp/ccLRPCzb.s:162    .text.SWO_PrintChar:0000000000000000 SWO_PrintChar
     /tmp/ccLRPCzb.s:231    .text.SWO_PrintString:0000000000000000 $t
     /tmp/ccLRPCzb.s:238    .text.SWO_PrintString:0000000000000000 SWO_PrintString
     /tmp/ccLRPCzb.s:282    .text.printString:0000000000000000 $t
     /tmp/ccLRPCzb.s:289    .text.printString:0000000000000000 printString
     /tmp/ccLRPCzb.s:312    .rodata.HAL_RTCEx_WakeUpTimerEventCallback.str1.4:0000000000000000 $d
     /tmp/ccLRPCzb.s:316    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccLRPCzb.s:323    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccLRPCzb.s:384    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000038 $d
     /tmp/ccLRPCzb.s:392    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLRPCzb.s:399    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLRPCzb.s:431    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccLRPCzb.s:437    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccLRPCzb.s:575    .text.MX_RTC_Init:000000000000008c $d
     /tmp/ccLRPCzb.s:581    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccLRPCzb.s:587    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccLRPCzb.s:642    .text.MX_USART3_UART_Init:000000000000002c $d
     /tmp/ccLRPCzb.s:648    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLRPCzb.s:655    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLRPCzb.s:830    .text.SystemClock_Config:00000000000000c0 $d
     /tmp/ccLRPCzb.s:836    .text.main:0000000000000000 $t
     /tmp/ccLRPCzb.s:843    .text.main:0000000000000000 main
     /tmp/ccLRPCzb.s:902    .bss.huart3:0000000000000000 huart3
     /tmp/ccLRPCzb.s:895    .bss.hrtc:0000000000000000 hrtc
     /tmp/ccLRPCzb.s:884    .bss.counter.0:0000000000000000 $d
     /tmp/ccLRPCzb.s:888    .bss.counter.0:0000000000000000 counter.0
     /tmp/ccLRPCzb.s:891    .bss.hrtc:0000000000000000 $d
     /tmp/ccLRPCzb.s:898    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
sprintf
HAL_UART_Transmit
HAL_GPIO_TogglePin
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTCEx_SetWakeUpTimer_IT
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
